/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: SAMPLESHEETCHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    /*
    ----------------------------------------------------------------------------------------
        get references section
    ----------------------------------------------------------------------------------------
    */
    withName: MASH_SCREEN {
        ext.args = "-i ${params.mashthreshold} -w -v ${params.max_p_value}"
        ext.prefix = {"${meta.id}"}
        publishDir = [
          
            path: { "${params.outdir}/${meta.id}/refs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            
        ]
       
    }
    withName: FILTERMASH {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/refs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        
    } 
    withName: SEQKIT_GREP {
        ext.prefix = {"${meta.id}-reference"}
        publishDir = [
            path: { "${params.outdir}/${meta.id}/refs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enable: false
        ]
    }
    
    withName: SEQKIT_HEADER {
        ext.prefix = {"${meta.id}-reference_header"}
        publishDir = [
            path: { "${params.outdir}/${meta.id}/refs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enable: false
        ]
    }

    withName: SAMTOOLS_FAIDX {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/refs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
   
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}

if (params.platform == 'nanopore') {
    includeConfig 'modules_nanopore.config'
}else if (params.platform == 'illumina') {
    includeConfig 'modules_illumina.config'
}
